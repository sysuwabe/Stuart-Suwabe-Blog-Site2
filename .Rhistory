trControl = trainControl(number = 1),
preProcess = c("BoxCox", "center", "scale"))
summary(m1)
library(modelr)
rmse(m1, foodintest1)
ctrl <- trainControl(method = "cv")
fit <- train(insecure_percen.x ~ ., data = foodintest1,
method = "rpart",
trControl = ctrl,
metric = "RMSE",
tuneGrid = expand.grid(cp = 0.01))
fit
library(rpart.plot)
rpart.plot(fit$finalModel, type = 5)
ctrl <- trainControl(method = "cv")
fit <- train(insecure_percen.x ~ ., data = foodintest1,
method = "rpart",
trControl = ctrl,
metric = "RMSE",
tuneGrid = expand.grid(cp = 0.01),
preProcess = c("BoxCox", "center", "scale"))
fit
library(rpart.plot)
rpart.plot(fit$finalModel, type = 5)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(tidyverse)
library(caret)
library(fastDummies)
library(rpart)
library(rpart.plot)
wine = read_rds("/Users/stuartsuwabe/Downloads/pinot.rds") %>%
mutate(lprice=log(price)) %>%
mutate(fruit=as.integer(str_detect(description,"[Ff]ruit"))) %>%
select(-description, -price, -taster_name)
set.seed(504)
m1 <- train(lprice ~ .,
data = wine,
method = "lm",
trControl = trainControl(number = 1))
summary(m1)
library(modelr)
rmse(m1, wine)
set.seed(504)
m2 <- train(lprice ~ .,
data = wine,
method = "lm",
trControl = trainControl(number = 1),
preProcess = c("BoxCox", "center", "scale"))
summary(m2)
rmse(m2, wine)
set.seed(504)
m3 <- train(lprice ~ fruit*points,
data = wine,
method = "lm",
trControl = trainControl(number = 1))
summary(m3)
ctrl <- trainControl(method = "cv")
foodfit <- train(insecure_percen.x ~ ., data = foodintest1,
method = "rpart",
trControl = ctrl,
metric = "RMSE",
tuneGrid = expand.grid(cp = 0.01),
preProcess = c("BoxCox", "center", "scale"))
foodfit
library(rpart.plot)
rpart.plot(foodfit$finalModel, type = 5)
ctrl <- trainControl(method = "cv")
fit <- train(province ~ ., data = wine,
method = "rpart",
trControl = ctrl,
metric = "Kappa",
tuneGrid = expand.grid(cp = 0.01))
fit
rpart.plot(fit$finalModel, type = 5)
ctrl <- trainControl(method = "cv")
foodfit <- train(insecure_percen.x ~ ., data = foodintest1,
method = "rpart",
trControl = ctrl,
metric = "RMSE",
tuneGrid = expand.grid(cp = 0.01))
foodfit
library(rpart.plot)
rpart.plot(foodfit$finalModel, type = 5)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidycensus)
census_api_key("41dcf38aad5e9257d3d377a226d8f5ce88274d23", install = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidycensus)
# census_api_key("41dcf38aad5e9257d3d377a226d8f5ce88274d23", install = TRUE)
View(foodintest)
View(vari)
CarPoolBelPov <- get_acs(geography = "county", variables = "B08122_010", state = "CA", year = 2019)
CarPoolBelPov1 <- CarPoolBelPov %>% rename(county = NAME, CarPoolBelPov = estimate) %>% select(county, CarPoolBelPov)
foodintest <- merge(foodintest, CarPoolBelPov1, by = "county")
CarPoolBelPov <- get_acs(geography = "county", variables = "B08122_010", state = "CA", year = 2019)
CarPoolBelPov1 <- CarPoolBelPov %>% rename(county = NAME, CarPoolBelPov = estimate) %>% select(county, CarPoolBelPov)
foodinT <- merge(foodintest, CarPoolBelPov1, by = "county")
CarPoolBelPov <- get_acs(geography = "county", variables = "B08122_010", state = "CA", year = 2019)
CarPoolBelPov1 <- CarPoolBelPov %>% rename(county = NAME, CarPoolBelPov = estimate) %>% select(county, CarPoolBelPov)
foodin02 <- merge(foodinT, CarPoolBelPov1, by = "county")
# number of people in extreme poverty who carpool
MEANS OF TRANSPORTATION TO WORK BY POVERTY STATUS IN THE PAST 12 MONTHS
Estimate!!Total:!!Public transportation (excluding taxicab):
Estimate!!Total:!!Walked:!!Below 100 percent of the poverty level
Estimate!!Total:!!Public transportation (excluding taxicab):
Estimate!!Total:!!Public transportation (excluding taxicab):!!Below 100 percent of the poverty level
Estimate!!Total:!!Public transportation (excluding taxicab):
Estimate!!Total:!!Public transportation (excluding taxicab):!!Below 100 percent of the poverty level
View(foodin02)
foodintestX <- foodin02[-c(1,3,5,15)]
library(tidymodels)
set.seed(504)
data_split <- initial_split(foodintestX, prop = 3/4)
train <- training(data_split)
test  <- testing(data_split)
food_rec <-
recipe(insecure_percen.x ~ ., data = train) %>%
step_BoxCox(all_numeric(), -all_outcomes())
lm_spec <-
linear_reg() %>%
set_engine("lm")
food_wflow <-
workflow() %>%
add_model(lm_spec) %>%
add_recipe(food_rec)
food_fit <- fit(food_wflow, train)
food_fit %>% ## display results
pull_workflow_fit() %>%
tidy()
library(caret)
# foodintest1 <- foodintest[-c(4,5)]
set.seed(504)
m1 <- train(insecure_percen.x ~ .,
data = foodintestX,
method = "lm",
trControl = trainControl(number = 1),
preProcess = c("BoxCox", "center", "scale"))
summary(m1)
library(modelr)
rmse(m1, foodintestX)
foodintestX <- foodin02[-c(1,3,5,11,15)]
library(tidymodels)
set.seed(504)
data_split <- initial_split(foodintestX, prop = 3/4)
train <- training(data_split)
test  <- testing(data_split)
food_rec <-
recipe(insecure_percen.x ~ ., data = train) %>%
step_BoxCox(all_numeric(), -all_outcomes())
lm_spec <-
linear_reg() %>%
set_engine("lm")
food_wflow <-
workflow() %>%
add_model(lm_spec) %>%
add_recipe(food_rec)
food_fit <- fit(food_wflow, train)
food_fit %>% ## display results
pull_workflow_fit() %>%
tidy()
library(caret)
# foodintest1 <- foodintest[-c(4,5)]
set.seed(504)
m1 <- train(insecure_percen.x ~ .,
data = foodintestX,
method = "lm",
trControl = trainControl(number = 1),
preProcess = c("BoxCox", "center", "scale"))
summary(m1)
library(modelr)
rmse(m1, foodintestX)
foodin03 <- foodin02 %>%
mutate(PubTransBelPov = PubTransBelPov / population) %>%
mutate(FoodAssist = FoodAssist / population) %>%
mutate(EduHSBelow = EduHSBelow / population) %>%
mutate(EduHSGrad = EduHSGrad / population) %>%
mutate(EduSomeCol = EduSomeCol / population) %>%
mutate(EduBach = EduBach / population) %>%
mutate(CarPoolBelPov = CarPoolBelPov / population)
View(foodin3)
View(foodin03)
View(foodin)
PubTransInPov <- get_acs(geography = "county", variables = "B08122_015", state = "CA", year = 2019)
PubTransInPov1 <- PubTransInPov %>% rename(county = NAME, PubTransInPov = estimate) %>% select(county, PubTransInPov)
# number of people in  poverty that take public transportation
PubTransPov <- merge(PubTransBelPov1, PubTransInPov1, by = "county")
View(PubTransPov)
PubTransData <- PubTransPov %>% mutate(PubTransPov = PubTransBelPov + PubTransInPov)
View(PubTransData)
PubTransData <- PubTransData[1,4]
View(PubTransData)
PubTransData <- PubTransPov %>% mutate(PubTransPov = PubTransBelPov + PubTransInPov)
View(PubTransData)
PubTransData1 <- PubTransData[1,4]
PubTransData1
View(PubTransData1)
PubTransData <- PubTransPov %>% mutate(PubTransPov = PubTransBelPov + PubTransInPov) %>% select(c(county, PubTransPov))
View(foodin03)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidycensus)
# census_api_key("41dcf38aad5e9257d3d377a226d8f5ce88274d23", install = TRUE)
foodin04 <- foodin03[1,3,5,7,9,11,15]
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidycensus)
# census_api_key("41dcf38aad5e9257d3d377a226d8f5ce88274d23", install = TRUE)
library(caret)
foodin04 <- foodin03 %>% select(c(1,3,5,7,9,11,15))
m2 <- train(insecure_percen.x ~ .,
data = foodin04,
method = "lm",
trControl = trainControl(number = 1),
preProcess = c("BoxCox", "center", "scale"))
View(foodin04)
foodin04 <- foodin03 %>% select(-c(1,3,5,7,9,11,15))
m2 <- train(insecure_percen.x ~ .,
data = foodin04,
method = "lm",
trControl = trainControl(number = 1),
preProcess = c("BoxCox", "center", "scale"))
summary(m2)
library(modelr)
rmse(m2, foodintestX)
x19test <- x19 %>% rename(county = `County, State`)
x19test2 <- merge(x19test, PubTransData, by = "county")
x19test3 <- merge(x19test2, FoodAssist1, by = "county")
x19test4 <- merge(x19test3, NoFoodAssist1, by = "county")
x19test5 <- merge(x19test5, EduHSBelow1, by = "county")
x19test6 <- merge(x19test6, EduHSGrad1, by = "county")
x19test7 <- merge(x19test7, EduSomeCol1, by = "county")
x19test8 <- merge(x19test8, EduBach1, by = "county")
View(x19test8)
foodinT <- merge(foodin19x, x19test8, by = "county")
View(foodinT)
foodinT <- foodinT[-c(1,3,5,7,9,11:14,18)]
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidycensus)
library(readxl)
foodin19 <- read_excel("~/Downloads/Map the Meal Gap Data/MMG2021_2019Data_ToShare.xlsx", sheet = "2019 County")
foodin19a <- foodin19 %>% rename(county = `County, State`, insecure_percen = `2019 Food Insecurity Rate`, insecure_num = `# of Food Insecure Persons in 2019`, insecure_low_income = `% FI â‰¤ Low Threshold`, insecure_btwn_income = `% FI Btwn Thresholds`, insecure_high_income = `% FI > High Threshold`, insecure_child_percen = `2019 Child food insecurity rate`, insecure_child_num = `# of Food Insecure Children in 2019`, child_below_poverty_percen = `% food insecure children in HH w/ HH incomes below 185 FPL in 2019`, child_above_poverty_percen = `% food insecure children in HH w/ HH incomes above 185 FPL in 2019`, secure_meal_value = `2019 Cost Per Meal`)  %>% filter(State == "CA") %>% mutate(population = round(insecure_num / insecure_percen, digits = 0))
PubTransBelPov <- get_acs(geography = "county", variables = "B08122_014", state = "CA", year = 2019)
PubTransBelPov1 <- PubTransBelPov %>% rename(county = NAME, PubTransBelPov = estimate) %>% select(county, PubTransBelPov)
PubTransInPov <- get_acs(geography = "county", variables = "B08122_015", state = "CA", year = 2019)
PubTransInPov1 <- PubTransInPov %>% rename(county = NAME, PubTransInPov = estimate) %>% select(county, PubTransInPov)
# number of people in poverty that take public transportation
PubTransPov <- merge(PubTransBelPov1, PubTransInPov1, by = "county")
PubTransData <- PubTransPov %>% mutate(PubTransPov = PubTransBelPov + PubTransInPov) %>% select(c(county, PubTransPov))
FoodAssist <- get_acs(geography = "county", variables = "B09010_002", state = "CA", year = 2019)
FoodAssist1 <- FoodAssist %>% rename(county = NAME, FoodAssist = estimate) %>% select(county, FoodAssist)
# number of people who rely on SSI, food stamps, or other support
EduHSBelow <- get_acs(geography = "county", variables = "B06009_002", state = "CA", year = 2019)
EduHSBelow1 <- EduHSBelow %>% rename(county = NAME, EduHSBelow = estimate) %>% select(county, EduHSBelow)
# number of people not graduated high school
EduHSGrad <- get_acs(geography = "county", variables = "B06009_003", state = "CA", year = 2019)
EduHSGrad1 <- EduHSGrad %>% rename(county = NAME, EduHSGrad = estimate) %>% select(county, EduHSGrad)
# number of people who graduated high school
EduSomeCol <- get_acs(geography = "county", variables = "B06009_004", state = "CA", year = 2019)
EduSomeCol1 <- EduSomeCol %>% rename(county = NAME, EduSomeCol = estimate) %>% select(county, EduSomeCol)
# number of people with some college
EduBach <- get_acs(geography = "county", variables = "B06009_005", state = "CA", year = 2019)
EduBach1 <- EduBach %>% rename(county = NAME, EduBach = estimate) %>% select(county, EduBach)
# number of people with a Bachelor's Degree
x19test2 <- merge(foodin19a, PubTransData, by = "county")
x19test3 <- merge(x19test2, FoodAssist1, by = "county")
x19test4 <- merge(x19test3, NoFoodAssist1, by = "county")
x19test5 <- merge(x19test5, EduHSBelow1, by = "county")
x19test6 <- merge(x19test6, EduHSGrad1, by = "county")
x19test7 <- merge(x19test7, EduSomeCol1, by = "county")
x19test8 <- merge(x19test8, EduBach1, by = "county")
View(foodin19a)
foodin19x <- foodin19a[-c(1:2,6:9,11,18)]
foodinT <- merge(foodin19x, x19test8, by = "county")
View(foodinT)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidycensus)
library(readxl)
foodin19 <- read_excel("~/Downloads/Map the Meal Gap Data/MMG2021_2019Data_ToShare.xlsx", sheet = "2019 County")
foodin19a <- foodin19 %>% rename(county = `County, State`, insecure_percen = `2019 Food Insecurity Rate`, insecure_num = `# of Food Insecure Persons in 2019`, insecure_low_income = `% FI â‰¤ Low Threshold`, insecure_btwn_income = `% FI Btwn Thresholds`, insecure_high_income = `% FI > High Threshold`, insecure_child_percen = `2019 Child food insecurity rate`, insecure_child_num = `# of Food Insecure Children in 2019`, child_below_poverty_percen = `% food insecure children in HH w/ HH incomes below 185 FPL in 2019`, child_above_poverty_percen = `% food insecure children in HH w/ HH incomes above 185 FPL in 2019`, secure_meal_value = `2019 Cost Per Meal`)  %>% filter(State == "CA") %>% mutate(population = round(insecure_num / insecure_percen, digits = 0))
# census_api_key("41dcf38aad5e9257d3d377a226d8f5ce88274d23", install = TRUE)
PubTransBelPov <- get_acs(geography = "county", variables = "B08122_014", state = "CA", year = 2019)
PubTransBelPov1 <- PubTransBelPov %>% rename(county = NAME, PubTransBelPov = estimate) %>% select(county, PubTransBelPov)
PubTransInPov <- get_acs(geography = "county", variables = "B08122_015", state = "CA", year = 2019)
PubTransInPov1 <- PubTransInPov %>% rename(county = NAME, PubTransInPov = estimate) %>% select(county, PubTransInPov)
# number of people in poverty that take public transportation
PubTransPov <- merge(PubTransBelPov1, PubTransInPov1, by = "county")
PubTransData <- PubTransPov %>% mutate(PubTransPov = PubTransBelPov + PubTransInPov) %>% select(c(county, PubTransPov))
FoodAssist <- get_acs(geography = "county", variables = "B09010_002", state = "CA", year = 2019)
FoodAssist1 <- FoodAssist %>% rename(county = NAME, FoodAssist = estimate) %>% select(county, FoodAssist)
# number of people who rely on SSI, food stamps, or other support
EduHSBelow <- get_acs(geography = "county", variables = "B06009_002", state = "CA", year = 2019)
EduHSBelow1 <- EduHSBelow %>% rename(county = NAME, EduHSBelow = estimate) %>% select(county, EduHSBelow)
# number of people not graduated high school
EduHSGrad <- get_acs(geography = "county", variables = "B06009_003", state = "CA", year = 2019)
EduHSGrad1 <- EduHSGrad %>% rename(county = NAME, EduHSGrad = estimate) %>% select(county, EduHSGrad)
# number of people who graduated high school
EduSomeCol <- get_acs(geography = "county", variables = "B06009_004", state = "CA", year = 2019)
EduSomeCol1 <- EduSomeCol %>% rename(county = NAME, EduSomeCol = estimate) %>% select(county, EduSomeCol)
# number of people with some college
EduBach <- get_acs(geography = "county", variables = "B06009_005", state = "CA", year = 2019)
EduBach1 <- EduBach %>% rename(county = NAME, EduBach = estimate) %>% select(county, EduBach)
# number of people with a Bachelor's Degree
x19test2 <- merge(foodin19a, PubTransData, by = "county")
x19test3 <- merge(x19test2, FoodAssist1, by = "county")
x19test4 <- merge(x19test3, NoFoodAssist1, by = "county")
x19test5 <- merge(x19test4, EduHSBelow1, by = "county")
x19test6 <- merge(x19test5, EduHSGrad1, by = "county")
x19test7 <- merge(x19test6, EduSomeCol1, by = "county")
x19test8 <- merge(x19test7, EduBach1, by = "county")
foodin19x <- foodin19a[-c(1:2,6:9,11,18)]
foodinT <- merge(foodin19x, x19test8, by = "county")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidycensus)
library(readxl)
foodin19 <- read_excel("~/Downloads/Map the Meal Gap Data/MMG2021_2019Data_ToShare.xlsx", sheet = "2019 County")
foodin19a <- foodin19 %>% rename(county = `County, State`, insecure_percen = `2019 Food Insecurity Rate`, insecure_num = `# of Food Insecure Persons in 2019`, insecure_low_income = `% FI â‰¤ Low Threshold`, insecure_btwn_income = `% FI Btwn Thresholds`, insecure_high_income = `% FI > High Threshold`, insecure_child_percen = `2019 Child food insecurity rate`, insecure_child_num = `# of Food Insecure Children in 2019`, child_below_poverty_percen = `% food insecure children in HH w/ HH incomes below 185 FPL in 2019`, child_above_poverty_percen = `% food insecure children in HH w/ HH incomes above 185 FPL in 2019`, secure_meal_value = `2019 Cost Per Meal`)  %>% filter(State == "CA") %>% mutate(population = round(insecure_num / insecure_percen, digits = 0))
# census_api_key("41dcf38aad5e9257d3d377a226d8f5ce88274d23", install = TRUE)
PubTransBelPov <- get_acs(geography = "county", variables = "B08122_014", state = "CA", year = 2019)
PubTransBelPov1 <- PubTransBelPov %>% rename(county = NAME, PubTransBelPov = estimate) %>% select(county, PubTransBelPov)
PubTransInPov <- get_acs(geography = "county", variables = "B08122_015", state = "CA", year = 2019)
PubTransInPov1 <- PubTransInPov %>% rename(county = NAME, PubTransInPov = estimate) %>% select(county, PubTransInPov)
# number of people in poverty that take public transportation
PubTransPov <- merge(PubTransBelPov1, PubTransInPov1, by = "county")
PubTransData <- PubTransPov %>% mutate(PubTransPov = PubTransBelPov + PubTransInPov) %>% select(c(county, PubTransPov))
FoodAssist <- get_acs(geography = "county", variables = "B09010_002", state = "CA", year = 2019)
FoodAssist1 <- FoodAssist %>% rename(county = NAME, FoodAssist = estimate) %>% select(county, FoodAssist)
# number of people who rely on SSI, food stamps, or other support
EduHSBelow <- get_acs(geography = "county", variables = "B06009_002", state = "CA", year = 2019)
EduHSBelow1 <- EduHSBelow %>% rename(county = NAME, EduHSBelow = estimate) %>% select(county, EduHSBelow)
# number of people not graduated high school
EduHSGrad <- get_acs(geography = "county", variables = "B06009_003", state = "CA", year = 2019)
EduHSGrad1 <- EduHSGrad %>% rename(county = NAME, EduHSGrad = estimate) %>% select(county, EduHSGrad)
# number of people who graduated high school
EduSomeCol <- get_acs(geography = "county", variables = "B06009_004", state = "CA", year = 2019)
EduSomeCol1 <- EduSomeCol %>% rename(county = NAME, EduSomeCol = estimate) %>% select(county, EduSomeCol)
# number of people with some college
EduBach <- get_acs(geography = "county", variables = "B06009_005", state = "CA", year = 2019)
EduBach1 <- EduBach %>% rename(county = NAME, EduBach = estimate) %>% select(county, EduBach)
# number of people with a Bachelor's Degree
x19test2 <- merge(foodin19a, PubTransData, by = "county")
x19test3 <- merge(x19test2, FoodAssist1, by = "county")
x19test4 <- merge(x19test3, NoFoodAssist1, by = "county")
x19test5 <- merge(x19test4, EduHSBelow1, by = "county")
x19test6 <- merge(x19test5, EduHSGrad1, by = "county")
x19test7 <- merge(x19test6, EduSomeCol1, by = "county")
x19test8 <- merge(x19test7, EduBach1, by = "county")
View(foodin19a)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidycensus)
library(readxl)
foodin19 <- read_excel("~/Downloads/Map the Meal Gap Data/MMG2021_2019Data_ToShare.xlsx", sheet = "2019 County")
foodin19a <- foodin19 %>% rename(county = `County, State`, insecure_percen = `2019 Food Insecurity Rate`, insecure_num = `# of Food Insecure Persons in 2019`, insecure_low_income = `% FI â‰¤ Low Threshold`, insecure_btwn_income = `% FI Btwn Thresholds`, insecure_high_income = `% FI > High Threshold`, insecure_child_percen = `2019 Child food insecurity rate`, insecure_child_num = `# of Food Insecure Children in 2019`, child_below_poverty_percen = `% food insecure children in HH w/ HH incomes below 185 FPL in 2019`, child_above_poverty_percen = `% food insecure children in HH w/ HH incomes above 185 FPL in 2019`, secure_meal_value = `2019 Cost Per Meal`)  %>% filter(State == "CA") %>% mutate(population = round(insecure_num / insecure_percen, digits = 0))
# census_api_key("41dcf38aad5e9257d3d377a226d8f5ce88274d23", install = TRUE)
PubTransBelPov <- get_acs(geography = "county", variables = "B08122_014", state = "CA", year = 2019)
PubTransBelPov1 <- PubTransBelPov %>% rename(county = NAME, PubTransBelPov = estimate) %>% select(county, PubTransBelPov)
PubTransInPov <- get_acs(geography = "county", variables = "B08122_015", state = "CA", year = 2019)
PubTransInPov1 <- PubTransInPov %>% rename(county = NAME, PubTransInPov = estimate) %>% select(county, PubTransInPov)
# number of people in poverty that take public transportation
PubTransPov <- merge(PubTransBelPov1, PubTransInPov1, by = "county")
PubTransData <- PubTransPov %>% mutate(PubTransPov = PubTransBelPov + PubTransInPov) %>% select(c(county, PubTransPov))
FoodAssist <- get_acs(geography = "county", variables = "B09010_002", state = "CA", year = 2019)
FoodAssist1 <- FoodAssist %>% rename(county = NAME, FoodAssist = estimate) %>% select(county, FoodAssist)
# number of people who rely on SSI, food stamps, or other support
EduHSBelow <- get_acs(geography = "county", variables = "B06009_002", state = "CA", year = 2019)
EduHSBelow1 <- EduHSBelow %>% rename(county = NAME, EduHSBelow = estimate) %>% select(county, EduHSBelow)
# number of people not graduated high school
EduHSGrad <- get_acs(geography = "county", variables = "B06009_003", state = "CA", year = 2019)
EduHSGrad1 <- EduHSGrad %>% rename(county = NAME, EduHSGrad = estimate) %>% select(county, EduHSGrad)
# number of people who graduated high school
EduSomeCol <- get_acs(geography = "county", variables = "B06009_004", state = "CA", year = 2019)
EduSomeCol1 <- EduSomeCol %>% rename(county = NAME, EduSomeCol = estimate) %>% select(county, EduSomeCol)
# number of people with some college
EduBach <- get_acs(geography = "county", variables = "B06009_005", state = "CA", year = 2019)
EduBach1 <- EduBach %>% rename(county = NAME, EduBach = estimate) %>% select(county, EduBach)
# number of people with a Bachelor's Degree
x19test2 <- merge(foodin19a, PubTransData, by = "county")
x19test3 <- merge(x19test2, FoodAssist1, by = "county")
x19test4 <- merge(x19test3, EduHSBelow1, by = "county")
x19test5 <- merge(x19test4, EduHSGrad1, by = "county")
x19test6 <- merge(x19test5, EduSomeCol1, by = "county")
x19test7 <- merge(x19test6, EduBach1, by = "county")
# foodinca <- x19test7[-c(1:3,6:9,)]
View(x19test7)
foodinca <- x19test7[-c(1:3,6:9,11,12,14,16)]
View(foodinca)
foodinca$pantry_num <- c(20,20,15,49,15,6,54,8,12,41,8,16,13,17,30,28,38,7,30,10,11,3,10,8,4,11,30,9,10,95,33,9,41,37,6,111,39,30,42,42,12,53,25,13,11,5,5,25,16,30,14,3,4,21,11,190,60,12)
foodinca <- x19test7[-c(1:3,6:9,11,12,16)]
foodinca$pantry_num <- c(20,20,15,49,15,6,54,8,12,41,8,16,13,17,30,28,38,7,30,10,11,3,10,8,4,11,30,9,10,95,33,9,41,37,6,111,39,30,42,42,12,53,25,13,11,5,5,25,16,30,14,3,4,21,11,190,60,12)
foodincaPercen <- foodinca %>%
mutate(PubTransPov = PubTransPov / population) %>%
mutate(FoodAssist = FoodAssist / population) %>%
mutate(EduHSBelow = EduHSBelow / population) %>%
mutate(EduHSGrad = EduHSGrad / population) %>%
mutate(EduSomeCol = EduSomeCol / population) %>%
mutate(EduBach = EduBach / population) %>%
mutate(CarPoolBelPov = CarPoolBelPov / population) %>%
select(-c(2,5,9))
foodincaPercen <- foodinca %>%
mutate(PubTransPov = PubTransPov / population) %>%
mutate(FoodAssist = FoodAssist / population) %>%
mutate(EduHSBelow = EduHSBelow / population) %>%
mutate(EduHSGrad = EduHSGrad / population) %>%
mutate(EduSomeCol = EduSomeCol / population) %>%
mutate(EduBach = EduBach / population) %>%
select(-c(2,5,9))
foodincaNum <- foodinca %>%
mutate(child_below_poverty_percen = child_below_poverty_percen * population) %>%
mutate(insecure_low_income = insecure_low_income * population) %>%
select(-c(1,4,9))
View(foodincaPercen)
View(foodincaNum)
library(caret)
set.seed(504)
m1 <- train(insecure_percen ~ .,
data = foodincaPercen,
method = "lm",
trControl = trainControl(number = 1),
preProcess = c("BoxCox", "center", "scale"))
summary(m1)
library(modelr)
rmse(m1, foodincaPercen)
set.seed(504)
m2 <- train(insecure_num ~ .,
data = foodincaNum,
method = "lm",
trControl = trainControl(number = 1),
preProcess = c("BoxCox", "center", "scale"))
summary(m2)
library(modelr)
rmse(m2, foodincaNum)
View(foodinca)
foodinca <- foodinca %>% mutate(child_pop = insecure_child_num / insecure_child_percen)
foodincaPercen <- foodinca %>%
mutate(PubTransPov = PubTransPov / population) %>%
mutate(FoodAssist = FoodAssist / population) %>%
mutate(EduHSBelow = EduHSBelow / population) %>%
mutate(EduHSGrad = EduHSGrad / population) %>%
mutate(EduSomeCol = EduSomeCol / population) %>%
mutate(EduBach = EduBach / population) %>%
select(-c(2,5,9,17))
foodincaNum <- foodinca %>%
mutate(child_below_poverty_percen = child_below_poverty_percen * child_pop) %>% # even though it says percen, treat it as a number, not a percentage
mutate(insecure_low_income = insecure_low_income * population) %>%
select(-c(1,4,9,17))
foodincaPercen <- foodinca %>%
mutate(PubTransPov = PubTransPov / population) %>%
mutate(FoodAssist = FoodAssist / population) %>%
mutate(EduHSBelow = EduHSBelow / population) %>%
mutate(EduHSGrad = EduHSGrad / population) %>%
mutate(EduSomeCol = EduSomeCol / population) %>%
mutate(EduBach = EduBach / population) %>%
select(-c(2,5,9,17))
foodincaNum <- foodinca %>%
mutate(child_below_poverty_percen = child_below_poverty_percen * insecure_child_num) %>% # even though it says percen, treat it as a number, not a percentage
mutate(insecure_low_income = insecure_low_income * population) %>%
select(-c(1,4,9,17))
library(caret)
set.seed(504)
m1 <- train(insecure_percen ~ .,
data = foodincaPercen,
method = "lm",
trControl = trainControl(number = 1),
preProcess = c("BoxCox", "center", "scale"))
summary(m1)
library(modelr)
rmse(m1, foodincaPercen)
set.seed(504)
m2 <- train(insecure_num ~ .,
data = foodincaNum,
method = "lm",
trControl = trainControl(number = 1),
preProcess = c("BoxCox", "center", "scale"))
summary(m2)
library(modelr)
rmse(m2, foodincaNum)
library(tidyverse)
library(tidycensus)
library(readxl)
library(caret)
library(caret)
set.seed(504)
m1 <- train(insecure_percen ~ .,
data = foodincaPercen,
method = "lm",
trControl = trainControl(number = 1),
preProcess = c("BoxCox", "center", "scale"))
summary(m1)
library(modelr)
rmse(m1, foodincaPercen)
set.seed(504)
m2 <- train(insecure_num ~ .,
data = foodincaNum,
method = "lm",
trControl = trainControl(number = 1),
preProcess = c("BoxCox", "center", "scale"))
summary(m2)
library(modelr)
rmse(m2, foodincaNum)
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
