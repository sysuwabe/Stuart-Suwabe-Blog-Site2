food_fit %>% ## display results
pull_workflow_fit() %>%
tidy()
food_pred <- predict(food_fit, percen_te %>% select(-l_insecure_percen))
head(food_pred)
food_rec <-
recipe(l_insecure_num ~ ., data = num_tr) %>%
step_BoxCox(all_numeric(), -all_outcomes())
food_wflow <-
workflow() %>%
add_model(lm_spec) %>%
add_recipe(food_rec)
food_fit <- fit(food_wflow, num_tr)
food_fit %>% ## display results
pull_workflow_fit() %>%
tidy()
food_pred <- predict(food_fit, num_te %>% select(-l_insecure_num))
head(food_pred)
# Keep in mind how we split up the data originally...
## percen_index <- createDataPartition(foodincaPercen1$l_insecure_percen, p = 0.7, list = FALSE)
## percen_tr <- foodincaPercen1[ percen_index, ]
## percen_te <- foodincaPercen1[-percen_index, ]
## num_index <- createDataPartition(foodincaNum1$l_insecure_num, p = 0.7, list = FALSE)
## num_tr <- foodincaNum1[ num_index, ]
## num_te <- foodincaNum1[-num_index, ]
library(tidymodels)
food_rec1 <-
recipe(l_insecure_percen ~ ., data = percen_tr) %>%
step_BoxCox(all_numeric(), -all_outcomes())
lm_spec <-
linear_reg() %>%
set_engine("lm")
food_wflow <-
workflow() %>%
add_model(lm_spec) %>%
add_recipe(food_rec1)
food_fit1 <- fit(food_wflow, percen_tr)
food_fit1 %>% ## display results
pull_workflow_fit() %>%
tidy()
food_pred <- predict(food_fit1, percen_te %>% select(-l_insecure_percen))
head(food_pred)
food_rec2 <-
recipe(l_insecure_num ~ ., data = num_tr) %>%
step_BoxCox(all_numeric(), -all_outcomes())
food_wflow <-
workflow() %>%
add_model(lm_spec) %>%
add_recipe(food_rec)
food_fit2 <- fit(food_wflow, num_tr)
food_fit2 %>% ## display results
pull_workflow_fit() %>%
tidy()
food_pred <- predict(food_fit2, num_te %>% select(-l_insecure_num))
head(food_pred)
summary(food_fit2)
library(stacks)
folds <- vfold_cv(train, v = 3)
metric <- metric_set(rmse)
# ctrl_res <- control_resamples()
library(baguette)
bag_spec <-
bag_tree() %>%
set_engine("rpart", times = 50L) %>%
set_mode("regression")
food_wflow <-
workflow() %>%
add_model(bag_spec) %>%
add_recipe(food_rec1)
bag_res1 <-
fit_resamples(
food_wflow,
resamples = folds,
metrics = metric,
control = control_stack_resamples()
)
bag_res1 %>%
collect_metrics()
food_wflow <-
workflow() %>%
add_model(bag_spec) %>%
add_recipe(food_rec2)
bag_res2 <-
fit_resamples(
food_wflow,
resamples = folds,
metrics = metric,
control = control_stack_resamples()
)
bag_res2 %>%
collect_metrics()
bag_res2
library(ranger)
rf_spec <-
rand_forest() %>%
set_engine("ranger") %>%
set_mode("regression")
food_wflow <-
workflow() %>%
add_model(rf_spec) %>%
add_recipe(food_rec1)
rf_res1 <-
fit_resamples(
food_wflow,
resamples = folds,
metrics = metric,
control = control_stack_resamples()
)
rf_res1 %>%
collect_metrics()
food_wflow <-
workflow() %>%
add_model(rf_spec) %>%
add_recipe(food_rec2)
rf_res2 <-
fit_resamples(
food_wflow,
resamples = folds,
metrics = metric,
control = control_stack_resamples()
)
rf_res2 %>%
collect_metrics()
xgb_spec <-
boost_tree() %>%
set_engine("xgboost") %>%
set_mode("regression")
food_wflow <-
workflow() %>%
add_model(xgb_spec) %>%
add_recipe(food_rec1)
xgb_res1 <-
fit_resamples(
wine_wflow,
resamples = folds,
metrics = metric,
control = control_stack_resamples()
)
xgb_res1 %>%
collect_metrics()
food_wflow <-
workflow() %>%
add_model(xgb_spec) %>%
add_recipe(food_rec2)
xgb_res2 <-
fit_resamples(
wine_wflow,
resamples = folds,
metrics = metric,
control = control_stack_resamples()
)
xgb_res2 %>%
collect_metrics()
bag_res2$.notes
percen_index <- createDataPartition(foodincaPercen1$l_insecure_percen, p = 0.7, list = FALSE)
percen_tr <- foodincaPercen1[ percen_index, ]
percen_te <- foodincaPercen1[-percen_index, ]
num_index <- createDataPartition(foodincaNum1$l_insecure_num, p = 0.7, list = FALSE)
num_tr <- foodincaNum1[ num_index, ]
num_te <- foodincaNum1[-num_index, ]
library(stacks)
folds <- vfold_cv(train, v = 3)
metric <- metric_set(rmse)
# ctrl_res <- control_resamples()
library(baguette)
bag_spec <-
bag_tree() %>%
set_engine("rpart", times = 50L) %>%
set_mode("regression")
food_wflow <-
workflow() %>%
add_model(bag_spec) %>%
add_recipe(food_rec1)
bag_res1 <-
fit_resamples(
food_wflow,
resamples = folds,
metrics = metric,
control = control_stack_resamples()
)
bag_res1 %>%
collect_metrics()
library(tidymodels)
set.seed(504)
data_split <- initial_split(foodincaPercen1, prop = 3/4)
percen_tr <- training(data_split)
percen_te  <- testing(data_split)
set.seed(504)
data_split <- initial_split(foodincaNum1, prop = 3/4)
num_tr <- training(data_split)
num_te  <- testing(data_split)
food_rec1 <-
recipe(l_insecure_percen ~ ., data = percen_tr) %>%
step_BoxCox(all_numeric(), -all_outcomes())
lm_spec <-
linear_reg() %>%
set_engine("lm")
food_wflow <-
workflow() %>%
add_model(lm_spec) %>%
add_recipe(food_rec1)
food_fit1 <- fit(food_wflow, percen_tr)
food_fit1 %>% ## display results
pull_workflow_fit() %>%
tidy()
food_pred <- predict(food_fit1, percen_te %>% select(-l_insecure_percen))
head(food_pred)
food_rec2 <-
recipe(l_insecure_num ~ ., data = num_tr) %>%
step_BoxCox(all_numeric(), -all_outcomes())
food_wflow <-
workflow() %>%
add_model(lm_spec) %>%
add_recipe(food_rec)
food_fit2 <- fit(food_wflow, num_tr)
food_fit2 %>% ## display results
pull_workflow_fit() %>%
tidy()
food_pred <- predict(food_fit2, num_te %>% select(-l_insecure_num))
head(food_pred)
library(stacks)
folds <- vfold_cv(train, v = 3)
metric <- metric_set(rmse)
# ctrl_res <- control_resamples()
library(baguette)
bag_spec <-
bag_tree() %>%
set_engine("rpart", times = 50L) %>%
set_mode("regression")
food_wflow <-
workflow() %>%
add_model(bag_spec) %>%
add_recipe(food_rec1)
bag_res1 <-
fit_resamples(
food_wflow,
resamples = folds,
metrics = metric,
control = control_stack_resamples()
)
bag_res1 %>%
collect_metrics()
View(percen_tr)
View(percen_tr)
xgb_spec <-
boost_tree() %>%
set_engine("xgboost") %>%
set_mode("regression")
food_wflow <-
workflow() %>%
add_model(xgb_spec) %>%
add_recipe(food_rec1)
xgb_res1 <-
fit_resamples(
wine_wflow,
resamples = folds,
metrics = metric,
control = control_stack_resamples()
)
xgb_res1 %>%
collect_metrics()
library(stacks)
folds1 <- vfold_cv(percen_tr, v = 3)
folds2 <- vfold_cv(num_tr, v = 3)
metric <- metric_set(rmse)
# ctrl_res <- control_resamples()
library(baguette)
bag_spec <-
bag_tree() %>%
set_engine("rpart", times = 50L) %>%
set_mode("regression")
food_wflow <-
workflow() %>%
add_model(bag_spec) %>%
add_recipe(food_rec1)
bag_res1 <-
fit_resamples(
food_wflow,
resamples = folds1,
metrics = metric,
control = control_stack_resamples()
)
bag_res1 %>%
collect_metrics()
bag_res1$.notes
# I take out these columns because of potential leakage.
foodincaPercen1 <- foodincaPercen %>% mutate(l_insecure_percen = log(insecure_percen)) %>% rename(budget_shortfall = `2019 Weighted Annual Food Budget Shortfall`) %>% select(-c(1,3,4))
foodincaNum1 <- foodincaNum %>% mutate(l_insecure_num = log(insecure_num)) %>% rename(budget_shortfall = `2019 Weighted Annual Food Budget Shortfall`) %>% select(-c(1,3,4))
library(caret)
control <- trainControl(method = "boot", number = 5)
set.seed(504)
m1 <- train(l_insecure_percen ~ .,
data = foodincaPercen1,
method = "lm",
trControl = control,
preProcess = c("BoxCox", "center", "scale"))
summary(m1)
library(modelr)
rmse(m1, foodincaPercen1)
set.seed(504)
m2 <- train(l_insecure_num ~ .,
data = foodincaNum1,
method = "lm",
trControl = control,
preProcess = c("BoxCox", "center", "scale"))
summary(m2)
library(modelr)
rmse(m2, foodincaNum1)
library(tidymodels)
set.seed(504)
data_split <- initial_split(foodincaPercen1, prop = 3/4)
percen_tr <- training(data_split)
percen_te  <- testing(data_split)
set.seed(504)
data_split <- initial_split(foodincaNum1, prop = 3/4)
num_tr <- training(data_split)
num_te  <- testing(data_split)
food_rec1 <-
recipe(l_insecure_percen ~ ., data = percen_tr) %>%
step_BoxCox(all_numeric(), -all_outcomes())
lm_spec <-
linear_reg() %>%
set_engine("lm")
food_wflow <-
workflow() %>%
add_model(lm_spec) %>%
add_recipe(food_rec1)
food_fit1 <- fit(food_wflow, percen_tr)
food_fit1 %>% ## display results
pull_workflow_fit() %>%
tidy()
food_pred <- predict(food_fit1, percen_te %>% select(-l_insecure_percen))
head(food_pred)
library(stacks)
folds1 <- vfold_cv(percen_tr, v = 3)
folds2 <- vfold_cv(num_tr, v = 3)
metric <- metric_set(rmse)
library(baguette)
bag_spec <-
bag_tree() %>%
set_engine("rpart", times = 50L) %>%
set_mode("regression")
food_wflow <-
workflow() %>%
add_model(bag_spec) %>%
add_recipe(food_rec1)
bag_res1 <-
fit_resamples(
food_wflow,
resamples = folds1,
metrics = metric,
control = control_stack_resamples()
)
bag_res1 %>%
collect_metrics()
bag_res1$.notes
food_wflow <-
workflow() %>%
add_model(bag_spec) %>%
add_recipe(food_rec2)
bag_res2 <-
fit_resamples(
food_wflow,
resamples = folds2,
metrics = metric,
control = control_stack_resamples()
)
bag_res2 %>%
collect_metrics()
bag_res2$.notes
View(num_tr)
food_rec2 <-
recipe(l_insecure_num ~ ., data = num_tr) %>%
step_BoxCox(all_numeric(), -all_outcomes())
food_wflow <-
workflow() %>%
add_model(lm_spec) %>%
add_recipe(food_rec2)
food_fit2 <- fit(food_wflow, num_tr)
food_fit2 %>% ## display results
pull_workflow_fit() %>%
tidy()
food_pred <- predict(food_fit2, num_te %>% select(-l_insecure_num))
head(food_pred)
food_wflow <-
workflow() %>%
add_model(bag_spec) %>%
add_recipe(food_rec2)
bag_res2 <-
fit_resamples(
food_wflow,
resamples = folds2,
metrics = metric,
control = control_stack_resamples()
)
bag_res2 %>%
collect_metrics()
library(ranger)
rf_spec <-
rand_forest() %>%
set_engine("ranger") %>%
set_mode("regression")
food_wflow <-
workflow() %>%
add_model(rf_spec) %>%
add_recipe(food_rec1)
rf_res1 <-
fit_resamples(
food_wflow,
resamples = folds1,
metrics = metric,
control = control_stack_resamples()
)
rf_res1 %>%
collect_metrics()
food_wflow <-
workflow() %>%
add_model(rf_spec) %>%
add_recipe(food_rec2)
rf_res2 <-
fit_resamples(
food_wflow,
resamples = folds2,
metrics = metric,
control = control_stack_resamples()
)
rf_res2 %>%
collect_metrics()
xgb_spec <-
boost_tree() %>%
set_engine("xgboost") %>%
set_mode("regression")
food_wflow <-
workflow() %>%
add_model(xgb_spec) %>%
add_recipe(food_rec1)
xgb_res1 <-
fit_resamples(
wine_wflow,
resamples = folds1,
metrics = metric,
control = control_stack_resamples()
)
xgb_res1 %>%
collect_metrics()
xgb_res1$.notes
xgb_spec <-
boost_tree() %>%
set_engine("xgboost") %>%
set_mode("regression")
food_wflow <-
workflow() %>%
add_model(xgb_spec) %>%
add_recipe(food_rec1)
xgb_res1 <-
fit_resamples(
food_wflow,
resamples = folds1,
metrics = metric,
control = control_stack_resamples()
)
xgb_res1 %>%
collect_metrics()
food_wflow <-
workflow() %>%
add_model(xgb_spec) %>%
add_recipe(food_rec2)
xgb_res2 <-
fit_resamples(
food_wflow,
resamples = folds2,
metrics = metric,
control = control_stack_resamples()
)
xgb_res2 %>%
collect_metrics()
food_data_st1 <-
stacks() %>%
add_candidates(bag_res1) %>%
add_candidates(rf_res1) %>%
add_candidates(xgb_res1)
food_model_st1 <-
food_data_st1 %>%
blend_predictions()
autoplot(food_model_st1, type = "weights")
food_model_st_fit1 <-
food_model_st1 %>%
fit_members()
food_model_st_fit1
food_pred <- predict(food_model_st_fit1, percen_te)
food_results1 <- bind_cols(food_pred, percen_te %>% select(l_insecure_percen))
head(food_results1)
food_metrics <- metric_set(rmse, rsq, mae)
food_metrics(food_results1, truth = l_insecure_percen, estimate = .pred)
food_data_st2 <-
stacks() %>%
add_candidates(bag_res2) %>%
add_candidates(rf_res2) %>%
add_candidates(xgb_res2)
food_model_st2 <-
food_data_st2 %>%
blend_predictions()
autoplot(food_model_st2, type = "weights")
food_model_st_fit2 <-
food_model_st2 %>%
fit_members()
food_model_st_fit2
food_pred <- predict(food_model_st_fit2, num_te)
food_results2 <- bind_cols(food_pred, num_te %>% select(l_insecure_num))
head(food_results2)
food_metrics <- metric_set(rmse, rsq, mae)
food_metrics(food_results2, truth = l_insecure_num, estimate = .pred)
