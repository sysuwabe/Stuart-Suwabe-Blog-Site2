---
title: "Homework 2"
author: "Stuart Suwabe"
date: "02/01/2021"
output: 
  html_document:
    df_print: kable
    fig_width: 11
    fig_height: 8
---

**Directions:**

Please turn in **both** a knitted HTML file *and* your Rmd file on WISE.

Good luck!

# Setup (1pt)

Change the author of this RMD file to be yourself and modify the below code so that you can successfully load the 'wine.rds' data file from your own computer. 

```{r setup, message=FALSE, warning=FALSE}
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(tidyverse)
library(fastDummies)
wine <- read_rds("/Users/stuartsuwabe/Downloads/wine.rds")
```

# Feature Engineering (3pts)

1. Modify the below code and create a total of 10 features (including points). 
2. Make sure that you remove all rows with a missing value. 
3. Make sure that log(price) and your features are the only columns that remain in the wino dataframe.

*Note: each item in a factor variable counts as one feature. I.e., each variety of wine counts as one feature, even though they are all in the same column within the dataframe.*

```{r}
library(caret)
wino <- wine %>% 
  mutate(lprice=log(price)) 

# engineer features here, points is already a variable, so it is Feature 1. 

# Identify all wine varieties with count above 300, the remainder call "Other." 
## Create count above 300 for all wine varieties
  variety_group <- wine %>%
  group_by(variety) %>%
  count() %>%
  arrange(desc(n)) %>%
  filter(n > 199)

## Create variable that only acknowledges varieties with data set count of over 100
wino <- wino %>%
  mutate(variety_200 = ifelse(variety == variety_group$variety, variety ,variety == "Other")) %>%
  mutate(variety_200 = str_replace(variety_200,"FALSE", "Other")) # Feature 2

  
# Sentiment Analysis: number of positive/negative words in each description
library(tidytext)
library(stringr)

## lowercase the description column
wino$description <- tolower(wino$description)

## Pull out all the individual words in the description column 
wine_words <- wino %>% 
  unnest_tokens(word, description)%>%
  select(id,word)

## Remove stop words
wine_words <- wine_words %>% 
  anti_join(stop_words)

## Use sentiment to analyze words
wine_words <- wine_words %>% 
  left_join(sentiments, by = c("word" = "word"))

wine_words$positive <- 0
wine_words$negative <- 0
wine_words <- wine_words %>%
  mutate(positive=replace(positive, sentiment == "positive", 1)) %>% 
  mutate(negative=replace(negative, sentiment == "negative", 1)) 

wine_words <- wine_words %>%
  group_by(id) %>%
  summarize(pos_words = sum(positive), neg_words = sum(negative)) %>%
  mutate(sentiment = pos_words-neg_words) 

## Join newly generated variables back into  main data set
wino <- wino %>%
  left_join(wine_words, by = c("id" = "id")) # Features 3, 4 


# Years of the wine go from 1995 to 2015. Having a dummy variable for this could work if I split it in half. 
wino$year_t <- ifelse(wino$year > 2012, 1, 0) # Feature 5


# Flavor profile column utilizing words in the description. This one for descriptions that involve words relating to red-colored fruit. 
wino <- wino %>% mutate(fp_red=0) %>% mutate(fp_red=replace(fp_red,str_detect(description,c("cranberry|red plum|pomegranate|sour cherry|strawberry|cherry|raspberry")),1)) # Feature 6


# Flavor profile column utilizing words in the description. This one for seemingly socially displeasing descriptions of wine involving acquired tastes.
wino <- wino %>% mutate(fp_sulf = 0) %>% mutate(fp_sulf = replace(fp_sulf, str_detect(description, c("cured meat|boiled eggs|burnt rubber|match box|garlic|onion|cat pee")), 1)) # Feature 7


# How long is the description? A longer description (more words) could be a better points rating. 
wino$desc_length <- str_length(wino$description) # Feature 8 


# Let's look at the countries. I'll put all countries with less than 1,000 wine entries into an other category
table(wino$country)
sum(is.na(wino$country)) # I'll put these missing values into an "Unknown" observation. 
wino <- wino %>% mutate(country = str_replace_na(country, replacement = "Unknown"))

country_b <- c("Armenia", "Bosnia and Herzegovina", "Brazil", "Bulgaria", "Canada", "China", "Croatia", "Cyprus", "Czech Republic", "Egypt", "England", "Georgia", "Greece", "Hungary", "India", "Israel", "Lebanon", "Luxembourg", "Macedonia", "Mexico", "Moldova", "Morocco", "Peru", "Romania", "Serbia", "Slovakia", "Slovenia", "Switzerland", "Turkey", "Ukraine", "Uruguay")

wino <- wino %>% mutate(country_1k = fct_collapse(country, "Other" = country_b)) # Feature 9 


# I'll do something similar with the names of reviewers: less than 1,000 becomes an Other category
table(wino$taster_name) 
sum(is.na(wino$taster_name))
wine <- wine %>% mutate(taster_name = str_replace_na(taster_name, replacement="Unknown")) # Like before, missing data becomes Unknown observations

reviewers <- c("Alexander Peartree","Carrie Dykes","Christina Pickard","Fiona Adams","Jeff Jenssen","Mike DeSimone")

wino <- wino %>% mutate(taster_1k = fct_collapse(taster_name, "Other" = reviewers)) # Feature 10 


# Let's put it all together now...
wino <- wino %>% select(lprice, points, variety_200, neg_words, sentiment, year_t, fp_red, fp_sulf, desc_l, country_1k, taster_1k)
```

# Caret (5pts)

1. Use the Caret library to partition the wino dataframe into an 80/20 split. 
2. Then run a linear regression with bootstrap resampling. 
3. Report RMSE when your model is run on the test partition of the data.

*Hint: control <- trainControl(method="boot", number=5)*

```{r}
set.seed(504)

wine_index <- createDataPartition(wino$lprice, p = 0.8, list = FALSE)
wino_tr <- wino[ wine_index, ]
wino_te <- wino[-wine_index, ]

control <- trainControl(method = "boot", number = 5)

m1 <- train(lprice ~ .,
            data = wino_tr, 
            method = 'lm',
            trControl = control)

wine_pred <- predict(m1, wino_te)
postResample(pred = wine_pred, obs = wino_te$lprice)
# RMSE: 0.4713265

```

# Variable selection (1pt)

Graph the importance of your 10 features.

```{r}
# (1) For scored points, it seems that the higher the points, the higher the overall points. This is a large impact, no doubt. 
ggplot(wino, aes(points, lprice)) + geom_point() + geom_smooth()


# (2) For description length, price does seem to increase with longer descriptions. I'd call it a significant impact. 
ggplot(wino, aes(desc_l, lprice)) + geom_point() + geom_smooth(method = "lm")


# (3) I think there is significance here. Ignoring the Other category, a variety with more wine inputs in the data can lead to having a potentially higher price for its wine than others. That said, the champaigne blend variety definitely has overall higher scores, though there aren't as many inputs. I'd say it is significant. 
ggplot(wino, aes(points, lprice)) + geom_point() + facet_wrap(~variety_200)


# (4) I utilized dummy variables for the years to where the number of wines made in each individual variable was as close to even as possible. Though I do not see much in terms of raw impact, at the very least with this variable there is a greater chance of even sampling all around. 
ggplot(wino, aes(points, lprice)) + geom_point() + facet_wrap(~ year_t)
ggplot(wino, aes(x = year_t)) + geom_bar() + coord_flip()


# (5) Wait... more negative words leads to a higher price? Without method = "lm", the line seems to curve up slightly before going negative. There is an impact, but I can't really tell what exactly...
ggplot(wino, aes(neg_words, lprice)) + geom_point() + geom_smooth(method = "lm")
ggplot(wino, aes(neg_words, lprice)) + geom_point() + geom_smooth()


# (7) With more sentiment, there is a slight increase in price, so I think this is significant to a degree. 
ggplot(wino, aes(sentiment, lprice)) + geom_point() + geom_smooth(method = "lm")

 
# (8) It seems that wines with a description pertaining to red fruits have similar prices. This one may not be that impactful. 
ggplot(wino, aes(points, lprice)) + geom_point() + facet_wrap(~fp_red)


# (9) It seems that overall price for wines with a more 'unusual' descriptor are much lower overall, and have notably many lesser point ratings. Quite the impact. 
ggplot(wino, aes(points, lprice)) + geom_point() + facet_wrap(~fp_sulf)


# (10) The country seems to impact the wine price, though there are certainly a few 'oultier'-esque wine prices for multiple of the countries. I would say country has a bit of an impact. 
ggplot(wino, aes(points, lprice, color = country_1k)) + geom_point() + facet_wrap(~ country_1k) + theme(legend.position = "none") + geom_smooth(method = "lm", color = "black")
ggplot(wino, aes(x = country_1k)) + geom_bar() + coord_flip() 


# I don't think the taster has much impact on the price of the wine. Perhaps some have higher prices than others, but Michael Schachner, the taster with the second most reviews in the data, has mostly worse point ratings compared to Roger Voss, with the most reviews, being everywhere but having many very high point ratings.  
ggplot(wino, aes(points, lprice, color = taster_1k)) + geom_point() + facet_wrap(~ taster_1k) + theme(legend.position = "none") + geom_smooth(method = "lm", color = "black")
ggplot(wino, aes(x = taster_1k)) + geom_bar() + coord_flip() 
```

# Bonus (3pts)

1. Execute 'set.seed(504)' prior to running your (training/test) data partition
2. Generate an RMSE on the test data of < 0.47 (1pt), < 0.46 (2pts), or < 0.45 (3pts)

## I tried. Believe me. This is by far the closest I could get it. 